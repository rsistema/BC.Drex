// <auto-generated />
using System;
using BC.Drex.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BC.Drex.Infrastructure.Migrations
{
    [DbContext(typeof(DrexDbContext))]
    partial class DrexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BC.Drex.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ffa140f-f66e-4c7c-b9dd-5e9eb32f4430"),
                            Changed = new DateTime(2025, 1, 28, 23, 47, 35, 866, DateTimeKind.Utc).AddTicks(2372),
                            Created = new DateTime(2025, 1, 28, 23, 47, 35, 866, DateTimeKind.Utc).AddTicks(2367),
                            Email = "admin@bc.com",
                            Name = "admin",
                            Password = "$2a$11$JVno08MUGtByvXXuzO3xuO.5JLUkp3RrCqYdvUuQVXqmSSHZf9.5q"
                        });
                });

            modelBuilder.Entity("BC.Drex.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("378edd6a-71a0-40ef-9e9f-135a70bb5f7f"),
                            Active = true,
                            Amount = 5000m,
                            UserId = new Guid("0ffa140f-f66e-4c7c-b9dd-5e9eb32f4430")
                        });
                });

            modelBuilder.Entity("BC.Drex.Domain.Entities.WalletTransferLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FromWalletId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToWalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("WalletTransferLogs");
                });

            modelBuilder.Entity("BC.Drex.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("BC.Drex.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
